apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus-graphql-kubeconfig
  namespace: {{.Values.global.namespace}}
data:
  kubeconfig: |
    current-context: localapiserver
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        api-version: v1
        server: http://nexus-apiserver:8080
        insecure-skip-tls-verify: true
      name: localapiserver
    contexts:
    - context:
        cluster: localapiserver
      name: localapiserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-graphql-server
  namespace: {{.Values.global.namespace}}
  labels:
    control-plane: graphql
spec:
  selector:
    matchLabels:
      control-plane: graphql
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: graphql
      labels:
        control-plane: graphql
    spec:
      initContainers:
        - name: check-nexus-proxy-container
          image: "gcr.io/mesh7-public-images/tools:latest"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              set -x
              URL="http://nexus-apiserver:8080/api/v1/namespaces"
              max_retries=20
              counter=0
              while [[ $counter -lt $max_retries ]]; do
                    status=$(curl -s -o /dev/null -I -w "%{http_code}" -XGET $URL)
                    if [ $status == "200" ]; then
                        echo "$URL is reachable"
                        exit 0
                    else
                        counter=$((counter +1))
                        sleep 5
                    fi
              done
        - name: create-backend-route-object
          image: "gcr.io/mesh7-public-images/tools:latest"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c 
            - |
                #!/bin/bash
                set -x
                function create_object() {
                FILE=$1
                RETRY=4
                ATTEMPT=0
                while [ $ATTEMPT -ne $RETRY ]; do
                  if ! cat $FILE | kubectl -s nexus-api-gw:80 apply -f -; then
                    ATTEMPT=$((ATTEMPT + 1))
                    if [ $ATTEMPT -ne $RETRY ]; then
                        sleep 2
                    else
                        exit 1
                    fi
                  else
                    break
                  fi
                  done
                }
                echo "Creating custom route object"
                cat > /tmp/object <<EOF
                apiVersion: route.nexus.org/v1
                kind: Route
                metadata:
                  name: graphqlv2
                spec:
                  service:
                    Name: nexus-graphql
                    Port: 8080
                    Scheme: Http
                  resource:
                    Name: graphql
                  uri: /
                EOF
                create_object /tmp/object
      containers:
        -
          image: {{.Values.global.registry}}/nexus-graphql-server:{{ required "Please provide global.graphql.tag value using --set-string option!" .Values.global.graphql.tag }}
          name: graphql
          env:
            - name: KUBECONFIG
              value: /kubeconfig/kubeconfig
            - name: PLUGIN_PATH
              value: /tmp/plugin/graphql.so
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - mountPath: /kubeconfig
              name: nexus-kubeconfig
            - mountPath: /tmp/plugin
              name: graphql-plugin
      volumes:
        - name: nexus-kubeconfig
          configMap:
            name: nexus-graphql-kubeconfig
        - name: graphql-plugin
          emptyDir: {}
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 0
        runAsGroup: 0
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-graphql
  namespace: {{.Values.global.namespace}}
spec:
  ports:
  - protocol: TCP
    name: http
    port: 8080
    targetPort: 8080
  selector:
    control-plane: graphql
