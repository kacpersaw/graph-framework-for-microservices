// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gqlclient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// EmployeesResponse is returned by Employees on success.
type EmployeesResponse struct {
	Root EmployeesRootOrgchart_Root `json:"root"`
}

// GetRoot returns EmployeesResponse.Root, and is useful for accessing the field via an interface.
func (v *EmployeesResponse) GetRoot() EmployeesRootOrgchart_Root { return v.Root }

// EmployeesRootOrgchart_Root includes the requested fields of the GraphQL type orgchart_Root.
type EmployeesRootOrgchart_Root struct {
	EmployeeRole EmployeesRootOrgchart_RootEmployeeRoleRole_Employee `json:"EmployeeRole"`
}

// GetEmployeeRole returns EmployeesRootOrgchart_Root.EmployeeRole, and is useful for accessing the field via an interface.
func (v *EmployeesRootOrgchart_Root) GetEmployeeRole() EmployeesRootOrgchart_RootEmployeeRoleRole_Employee {
	return v.EmployeeRole
}

// EmployeesRootOrgchart_RootEmployeeRoleRole_Employee includes the requested fields of the GraphQL type role_Employee.
type EmployeesRootOrgchart_RootEmployeeRoleRole_Employee struct {
	Id string `json:"Id"`
}

// GetId returns EmployeesRootOrgchart_RootEmployeeRoleRole_Employee.Id, and is useful for accessing the field via an interface.
func (v *EmployeesRootOrgchart_RootEmployeeRoleRole_Employee) GetId() string { return v.Id }

// ManagersResponse is returned by Managers on success.
type ManagersResponse struct {
	Root ManagersRootOrgchart_Root `json:"root"`
}

// GetRoot returns ManagersResponse.Root, and is useful for accessing the field via an interface.
func (v *ManagersResponse) GetRoot() ManagersRootOrgchart_Root { return v.Root }

// ManagersRootOrgchart_Root includes the requested fields of the GraphQL type orgchart_Root.
type ManagersRootOrgchart_Root struct {
	CEO ManagersRootOrgchart_RootCEOManagement_Leader `json:"CEO"`
}

// GetCEO returns ManagersRootOrgchart_Root.CEO, and is useful for accessing the field via an interface.
func (v *ManagersRootOrgchart_Root) GetCEO() ManagersRootOrgchart_RootCEOManagement_Leader {
	return v.CEO
}

// ManagersRootOrgchart_RootCEOManagement_Leader includes the requested fields of the GraphQL type management_Leader.
type ManagersRootOrgchart_RootCEOManagement_Leader struct {
	EngManagers []ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr `json:"EngManagers"`
}

// GetEngManagers returns ManagersRootOrgchart_RootCEOManagement_Leader.EngManagers, and is useful for accessing the field via an interface.
func (v *ManagersRootOrgchart_RootCEOManagement_Leader) GetEngManagers() []ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr {
	return v.EngManagers
}

// ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr includes the requested fields of the GraphQL type management_Mgr.
type ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr struct {
	Id string `json:"Id"`
}

// GetId returns ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr.Id, and is useful for accessing the field via an interface.
func (v *ManagersRootOrgchart_RootCEOManagement_LeaderEngManagersManagement_Mgr) GetId() string {
	return v.Id
}

func Employees(
	ctx context.Context,
	client graphql.Client,
) (*EmployeesResponse, error) {
	req := &graphql.Request{
		OpName: "Employees",
		Query: `
query Employees {
	root {
		EmployeeRole {
			Id
		}
	}
}
`,
	}
	var err error

	var data EmployeesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func Managers(
	ctx context.Context,
	client graphql.Client,
) (*ManagersResponse, error) {
	req := &graphql.Request{
		OpName: "Managers",
		Query: `
query Managers {
	root {
		CEO {
			EngManagers {
				Id
			}
		}
	}
}
`,
	}
	var err error

	var data ManagersResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
