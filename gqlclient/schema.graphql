scalar Map
type Query {
    root: orgchart_Root
}

type orgchart_Root {
    Id: ID
	ParentLabels: Map

    CEO: management_Leader!
    ExecutiveRole(Id: ID): role_Executive!
    EmployeeRole(Id: ID): role_Employee!
}

type engineering_Dev {
    Id: ID
	ParentLabels: Map

    Role: role_Employee!
    Name: String
    EmployeeID: Int
}

type engineering_Operations {
    Id: ID
	ParentLabels: Map

    Role: role_Employee!
    Name: String
    EmployeeID: Int
}

type hr_HumanResources {
    Id: ID
	ParentLabels: Map

    Role: role_Employee!
    Name: String
    EmployeeID: Int
}

type management_Leader {
    Id: ID
	ParentLabels: Map

    EngManagers(Id: ID): [management_Mgr!]
    Role: role_Executive!
    
    Designation: String
    Name: String
    EmployeeID: Int
    HR(Id: ID): hr_HumanResources!
}

type management_Mgr {
    Id: ID
	ParentLabels: Map

    Role: role_Employee!
    Name: String
    EmployeeID: Int
    Developers(Id: ID): engineering_Dev!
    Ops(Id: ID): engineering_Operations!
}

type role_Executive {
    Id: ID
	ParentLabels: Map

}

type role_Employee {
    Id: ID
	ParentLabels: Map

}

type NexusGraphqlResponse {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}

type TimeSeriesData {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}
