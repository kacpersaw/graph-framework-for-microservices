image:
  name: runner.servicemesh.biz:5000/allspark/runner:latest

variables:
  REPOSITORY: nexus/nexus-validation

.git_config: &git_config
  - git config --global user.name gitlab-tsm
  - git config --global user.email gitlab-tsm@vmware.com

.git_push: &git_push
  - |
      git add versions.sh
      [[ -n $(git diff --name-only) ]] && {
      git commit -m "update tags"
      git remote rm origin && git remote add origin git@gitlab.eng.vmware.com:$REPOSITORY.git
      git push -u origin HEAD:$CI_COMMIT_BRANCH
      } || {
      echo "Nothing to commit"

.setup_aws: &setup_aws
  - apt clean && apt update -y && apt install unzip -y
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.0.30.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  -  docker login --username AWS -p $(aws ecr get-login-password --region us-west-2) 284299419820.dkr.ecr.us-west-2.amazonaws.com

.create_builder: &create_builder
  - export CONTAINER_ID=$(docker ps -q -f "label=com.gitlab.gitlab-runner.job.id=$CI_JOB_ID" -f "label=com.gitlab.gitlab-runner.type=build")
  - make docker.builder
  - make docker.base

.setup_gcr: &setup_gcr
    - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-341.0.0-linux-x86_64.tar.gz
    - tar xvzf google-cloud-sdk-341.0.0-linux-x86_64.tar.gz
    - ./google-cloud-sdk/install.sh
    - export PATH=$PATH:$PWD/google-cloud-sdk/bin
    - echo "source $PWD/google-cloud-sdk/path.bash.inc" >> ~/.profile
    - source ~/.profile
    - echo $SERVICE_KEY_JSON > /root/gcloud-service-key.json
    - gcloud config set disable_prompts true
    - echo $SERVICE_KEY_JSON | gcloud auth activate-service-account --key-file=-
    - |
      gcloud --quiet config set project $GOOGLE_PROJECT_ID
      if [[ -n $GOOGLE_COMPUTE_ZONE ]]; then
        gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
      elif [[ -n $GOOGLE_COMPUTE_REGION ]]; then
        gcloud --quiet config set compute/region $GOOGLE_COMPUTE_REGION
      else
        echo \"ERROR: Set $GOOGLE_COMPUTE_ZONE or $GOOGLE_COMPUTE_REGION env variable\" >&2
        exit 1
      fi
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud auth configure-docker

build:
  stage: build
  script:
   - *setup_aws
   - *setup_gcr
   - *create_builder
   - docker images
   - CONTAINER_ID=$CONTAINER_ID PKG_NAME=/builds/${REPOSITORY} make build_in_container
   - make docker
   - make publish
   - make publish.ecr.registry

test:
  image: runner.servicemesh.biz:5000/allspark/runner:latest
  stage: test
  script:
   - *setup_aws
   - *setup_gcr
   - *create_builder
   - CONTAINER_ID=$CONTAINER_ID PKG_NAME=/builds/${REPOSITORY} make test_in_container

publish_latest:
  stage: publish_latest
  script:
   - *setup_gcr
   - |
    set -eux
    IMAGE_NAME=$(make show-image-name)
    LATEST_NAME="$(echo $IMAGE_NAME | cut -f 1 -d ':'):latest"
    gcloud container images add-tag --quiet $IMAGE_NAME $LATEST_NAME
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

periodic_deps_update:
  stage: periodic_deps_update
  script:
    - *setup_gcr
    - *setup_aws
    - *create_builder
    - |
      mkdir -p ./.ci_temp
      pushd .ci_temp
      git clone https://gitlab.eng.vmware.com/nsx-allspark_users/m7/asm-supervisor.git --branch "${CI_COMMIT_BRANCH}"
      popd
    - |
      pushd .ci_temp
        pushd asm-supervisor
          ASM_SUPERVISOR_TAG=$(make show-image-name 2> /dev/null | awk -F : '{ print $2 }')
        popd
      popd
      echo "#This file is generated by circleci periodic-release build" > versions.sh
      echo "ASM_SUPERVISOR_TAG=${ASM_SUPERVISOR_TAG}" >> versions.sh
    - git config --global user.email "system@kavachsec.org"
    - git config --global user.name "KavachSec auto-updater"
    - git checkout "${CI_COMMIT_BRANCH}"
    - |
      make download_builder_image && {
        echo "builder image found in repository"
      } || {
        echo "Publishing the builder image"
        make publish_builder_image
      }
    - CONTAINER_ID=$CONTAINER_ID PKG_NAME=/builds/${REPOSITORY} make test_in_container
    - git add versions.sh
    - |
      git diff --cached --exit-code && {
        echo "Nothing to commit"
      } || {
        git commit -m "Update latest tags";
        git push origin "${CI_COMMIT_BRANCH}"
      }
  rules:
    # THIS REQUIRES TO SET SCHEDULED CRON JOB IN GITLAB UI "30 21,6,10 * * *"
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_REF_NAME == "/release-.*/" && $CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_REF_NAME == "/Release-.*/" && $CI_PIPELINE_SOURCE == "schedule"'
