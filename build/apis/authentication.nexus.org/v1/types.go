// Code generated by nexus. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:openapi-gen=true
type Child struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

// +k8s:openapi-gen=true
type Link struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

/* ------------------- CRDs definitions ------------------- */

// +genclient
// +genclient:noStatus
// +genclient:nonNamespaced
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
type OIDC struct {
	metav1.TypeMeta   `json:",inline" yaml:",inline"`
	metav1.ObjectMeta `json:"metadata" yaml:"metadata"`
	Spec              OIDCSpec `json:"spec,omitempty" yaml:"spec,omitempty"`
}

func (c *OIDC) CRDName() string {
	return "oidcs.authentication.nexus.org"
}

// +k8s:openapi-gen=true
type OIDCSpec struct {
	Config          IDPConfig            `json:"config" yaml:"config"`
	ValidationProps ValidationProperties `json:"validationProps" yaml:"validationProps"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type OIDCList struct {
	metav1.TypeMeta `json:",inline" yaml:",inline"`
	metav1.ListMeta `json:"metadata" yaml:"metadata"`
	Items           []OIDC `json:"items" yaml:"items"`
}

// +k8s:openapi-gen=true
type IDPConfig struct {
	ClientId         string   `json:"clientId"`
	ClientSecret     string   `json:"clientSecret"`
	OAuthIssuerUrl   string   `json:"oAuthIssuerUrl"`
	OAuthRedirectUrl string   `json:"oAuthRedirectUrl"`
	Scopes           []string `json:"scopes"`
}

// +k8s:openapi-gen=true
type ValidationProperties struct {
	// InsecureIssuerURLContext allows discovery to work when the issuer_url reported
	// by upstream is mismatched with the discovery URL. This is meant for integration
	// with off-spec providers such as CSP, Azure.
	InsecureIssuerURLContext bool `json:"insecureIssuerURLContext"`

	// SkipIssuerValidation allows skipping verification of the issuer URL when validating
	// an ID/access token. It's useful for off-spec providers, e.g., CSP
	SkipIssuerValidation bool `json:"skipIssuerValidation"`

	// SkipClientIdValidation allows skipping verification of the client ID when validating
	// an ID/access token. It's useful for off-spec providers, e.g., CSP
	SkipClientIdValidation bool `json:"skipClientIdValidation"`

	// SkipClientAudValidation allows skipping verification of the "aud" (audience) claim when validating
	// an ID/access token. It's useful for off-spec providers, e.g., CSP
	SkipClientAudValidation bool `json:"skipClientAudValidation"`
}
