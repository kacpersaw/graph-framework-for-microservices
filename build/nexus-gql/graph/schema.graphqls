scalar Map
type Query {
    root(Id: ID): [api_Nexus!]
}

type api_Nexus {
    Id: ID
	ParentLabels: Map

    Config(Id: ID): config_Config!
    Runtime: runtime_Runtime!
}

type admin_ProxyRule {
    Id: ID
	ParentLabels: Map

    MatchCondition: String
    Upstream: String
}

type apigateway_ApiGateway {
    Id: ID
	ParentLabels: Map

    ProxyRules(Id: ID): [admin_ProxyRule!]
    Cors(Id: ID): [domain_CORSConfig!]
    Authn(Id: ID): authentication_OIDC!
}

type authentication_OIDC {
    Id: ID
	ParentLabels: Map

    Config: String
    ValidationProps: String
    JwtClaimUsername: String
}

type config_Config {
    Id: ID
	ParentLabels: Map

    Routes(Id: ID): [route_Route!]
    Tenant(Id: ID): [tenantconfig_Tenant!]
    TenantPolicy(Id: ID): [tenantconfig_Policy!]
    User(Id: ID): [user_User!]
    ApiGateway(Id: ID): apigateway_ApiGateway!
    Connect(Id: ID): connect_Connect!
}

type tenantconfig_Tenant {
    Id: ID
	ParentLabels: Map

    Name: String
    DNSSuffix: String
    SkipSaasTlsVerify: Boolean
    InstallTenant: Boolean
    InstallClient: Boolean
    OrderId: String
    Skus: String
    FeatureFlags: String
    Labels: String
}

type tenantconfig_Policy {
    Id: ID
	ParentLabels: Map

    StaticApplications: String
    PinApplications: String
    DynamicAppSchedulingDisable: Boolean
    DisableProvisioning: Boolean
    DisableAutoScaling: Boolean
    DisableAppClusterOnboarding: Boolean
    DisableUpgrade: Boolean
    OnFailureDowngrade: Boolean
}

type user_User {
    Id: ID
	ParentLabels: Map

    Tenant: tenantconfig_Tenant!
    Username: String
    Mail: String
    FirstName: String
    LastName: String
    Password: String
    TenantId: String
    Realm: String
}

type connect_Connect {
    Id: ID
	ParentLabels: Map

    Endpoints(Id: ID): [connect_NexusEndpoint!]
    ReplicationConfig(Id: ID): [connect_ReplicationConfig!]
}

type connect_NexusEndpoint {
    Id: ID
	ParentLabels: Map

    Host: String
    Port: String
    Cert: String
    Path: String
    Cloud: String
    ServiceAccountName: String
    ClientName: String
    ClientRegion: String
}

type connect_ReplicationConfig {
    Id: ID
	ParentLabels: Map

    RemoteEndpoint: connect_NexusEndpoint!
    AccessToken: String
    Source: String
    Destination: String
    StatusEndpoint: String
}

type domain_CORSConfig {
    Id: ID
	ParentLabels: Map

    Origins: String
    Headers: String
}

type route_Route {
    Id: ID
	ParentLabels: Map

    Uri: String
    Service: String
    Resource: String
}

type runtime_Runtime {
    Id: ID
	ParentLabels: Map

    Tenant(Id: ID): [tenantruntime_Tenant!]
}

type tenantruntime_Tenant {
    Id: ID
	ParentLabels: Map

    Namespace: String
    TenantName: String
    Attributes: String
    SaasDomainName: String
    SaasApiDomainName: String
    M7Enabled: String
    LicenseType: String
    StreamName: String
    AwsS3Bucket: String
    AwsKmsKeyId: String
    M7InstallationScheduled: String
    ReleaseVersion: String
}

type NexusGraphqlResponse {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}

type TimeSeriesData {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}
