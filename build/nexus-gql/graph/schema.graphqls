scalar Map
type Query {
    root(Id: ID): [api_Nexus!]
}

type api_Nexus {
    Id: ID
	ParentLabels: Map

    Config(Id: ID): config_Config!
}

type admin_ProxyRule {
    Id: ID
	ParentLabels: Map

    MatchCondition: String
    Upstream: String
}

type apigateway_ApiGateway {
    Id: ID
	ParentLabels: Map

    ProxyRules(Id: ID): [admin_ProxyRule!]
    Cors(Id: ID): [domain_CORSConfig!]
    Authn(Id: ID): authn_OIDC!
}

type authn_OIDC {
    Id: ID
	ParentLabels: Map

    Config: String
    ValidationProps: String
    JwtClaimUsername: String
}

type config_Config {
    Id: ID
	ParentLabels: Map

    Routes(Id: ID): [route_Route!]
    ApiGateway(Id: ID): apigateway_ApiGateway!
    Connect(Id: ID): connect_Connect!
}

type connect_Connect {
    Id: ID
	ParentLabels: Map

    Endpoints(Id: ID): [connect_NexusEndpoint!]
    ReplicationConfig(Id: ID): [connect_ReplicationConfig!]
}

type connect_NexusEndpoint {
    Id: ID
	ParentLabels: Map

    Host: String
    Port: String
    Cert: String
    Path: String
}

type connect_ReplicationConfig {
    Id: ID
	ParentLabels: Map

    RemoteEndpoint: connect_NexusEndpoint!
    AccessToken: String
    Source: String
    Destination: String
    StatusEndpoint: String
}

type domain_CORSConfig {
    Id: ID
	ParentLabels: Map

    Origins: String
    Headers: String
}

type route_Route {
    Id: ID
	ParentLabels: Map

    Uri: String
    Service: String
    Resource: String
}

type NexusGraphqlResponse {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}

type TimeSeriesData {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}
