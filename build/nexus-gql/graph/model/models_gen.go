// Code generated by github.com/vmware-tanzu/graph-framework-for-microservices/gqlgen, DO NOT EDIT.

package model

type NexusGraphqlResponse struct {
	Code         *int    `json:"Code"`
	Message      *string `json:"Message"`
	Data         *string `json:"Data"`
	Last         *string `json:"Last"`
	TotalRecords *int    `json:"TotalRecords"`
}

type TimeSeriesData struct {
	Code         *int    `json:"Code"`
	Message      *string `json:"Message"`
	Data         *string `json:"Data"`
	Last         *string `json:"Last"`
	TotalRecords *int    `json:"TotalRecords"`
}

type AdminProxyRule struct {
	Id             *string                `json:"Id"`
	ParentLabels   map[string]interface{} `json:"ParentLabels"`
	MatchCondition *string                `json:"MatchCondition"`
	Upstream       *string                `json:"Upstream"`
}

type ApiNexus struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Config       *ConfigConfig          `json:"Config"`
	Runtime      *RuntimeRuntime        `json:"Runtime"`
}

type ApigatewayApiGateway struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	ProxyRules   []*AdminProxyRule      `json:"ProxyRules"`
	Cors         []*DomainCORSConfig    `json:"Cors"`
	Authn        *AuthenticationOIDC    `json:"Authn"`
}

type AuthenticationOIDC struct {
	Id               *string                `json:"Id"`
	ParentLabels     map[string]interface{} `json:"ParentLabels"`
	Config           *string                `json:"Config"`
	ValidationProps  *string                `json:"ValidationProps"`
	JwtClaimUsername *string                `json:"JwtClaimUsername"`
}

type ConfigConfig struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Routes       []*RouteRoute          `json:"Routes"`
	Tenant       []*TenantconfigTenant  `json:"Tenant"`
	TenantPolicy []*TenantconfigPolicy  `json:"TenantPolicy"`
	User         []*UserUser            `json:"User"`
	ApiGateway   *ApigatewayApiGateway  `json:"ApiGateway"`
	Connect      *ConnectConnect        `json:"Connect"`
}

type ConnectConnect struct {
	Id                *string                     `json:"Id"`
	ParentLabels      map[string]interface{}      `json:"ParentLabels"`
	Endpoints         []*ConnectNexusEndpoint     `json:"Endpoints"`
	ReplicationConfig []*ConnectReplicationConfig `json:"ReplicationConfig"`
}

type ConnectNexusEndpoint struct {
	Id                 *string                `json:"Id"`
	ParentLabels       map[string]interface{} `json:"ParentLabels"`
	Host               *string                `json:"Host"`
	Port               *string                `json:"Port"`
	Cert               *string                `json:"Cert"`
	Path               *string                `json:"Path"`
	Cloud              *string                `json:"Cloud"`
	ServiceAccountName *string                `json:"ServiceAccountName"`
	ClientName         *string                `json:"ClientName"`
	ClientRegion       *string                `json:"ClientRegion"`
}

type ConnectReplicationConfig struct {
	Id             *string                `json:"Id"`
	ParentLabels   map[string]interface{} `json:"ParentLabels"`
	RemoteEndpoint *ConnectNexusEndpoint  `json:"RemoteEndpoint"`
	AccessToken    *string                `json:"AccessToken"`
	Source         *string                `json:"Source"`
	Destination    *string                `json:"Destination"`
	StatusEndpoint *string                `json:"StatusEndpoint"`
}

type DomainCORSConfig struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Origins      *string                `json:"Origins"`
	Headers      *string                `json:"Headers"`
}

type RouteRoute struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Uri          *string                `json:"Uri"`
	Service      *string                `json:"Service"`
	Resource     *string                `json:"Resource"`
}

type RuntimeRuntime struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Tenant       []*TenantruntimeTenant `json:"Tenant"`
}

type TenantconfigPolicy struct {
	Id                          *string                `json:"Id"`
	ParentLabels                map[string]interface{} `json:"ParentLabels"`
	StaticApplications          *string                `json:"StaticApplications"`
	PinApplications             *string                `json:"PinApplications"`
	DynamicAppSchedulingDisable *bool                  `json:"DynamicAppSchedulingDisable"`
	DisableProvisioning         *bool                  `json:"DisableProvisioning"`
	DisableAutoScaling          *bool                  `json:"DisableAutoScaling"`
	DisableAppClusterOnboarding *bool                  `json:"DisableAppClusterOnboarding"`
	DisableUpgrade              *bool                  `json:"DisableUpgrade"`
	OnFailureDowngrade          *bool                  `json:"OnFailureDowngrade"`
}

type TenantconfigTenant struct {
	Id                *string                `json:"Id"`
	ParentLabels      map[string]interface{} `json:"ParentLabels"`
	Name              *string                `json:"Name"`
	DNSSuffix         *string                `json:"DNSSuffix"`
	SkipSaasTlsVerify *bool                  `json:"SkipSaasTlsVerify"`
	InstallTenant     *bool                  `json:"InstallTenant"`
	InstallClient     *bool                  `json:"InstallClient"`
	OrderId           *string                `json:"OrderId"`
	Skus              *string                `json:"Skus"`
	FeatureFlags      *string                `json:"FeatureFlags"`
	Labels            *string                `json:"Labels"`
}

type TenantruntimeTenant struct {
	Id                      *string                `json:"Id"`
	ParentLabels            map[string]interface{} `json:"ParentLabels"`
	Namespace               *string                `json:"Namespace"`
	TenantName              *string                `json:"TenantName"`
	Attributes              *string                `json:"Attributes"`
	SaasDomainName          *string                `json:"SaasDomainName"`
	SaasApiDomainName       *string                `json:"SaasApiDomainName"`
	M7Enabled               *string                `json:"M7Enabled"`
	LicenseType             *string                `json:"LicenseType"`
	StreamName              *string                `json:"StreamName"`
	AwsS3Bucket             *string                `json:"AwsS3Bucket"`
	AwsKmsKeyId             *string                `json:"AwsKmsKeyId"`
	M7InstallationScheduled *string                `json:"M7InstallationScheduled"`
	ReleaseVersion          *string                `json:"ReleaseVersion"`
}

type UserUser struct {
	Id           *string                `json:"Id"`
	ParentLabels map[string]interface{} `json:"ParentLabels"`
	Tenant       *TenantconfigTenant    `json:"Tenant"`
	Username     *string                `json:"Username"`
	Mail         *string                `json:"Mail"`
	FirstName    *string                `json:"FirstName"`
	LastName     *string                `json:"LastName"`
	Password     *string                `json:"Password"`
	TenantId     *string                `json:"TenantId"`
	Realm        *string                `json:"Realm"`
}
