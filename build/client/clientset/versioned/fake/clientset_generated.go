/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	clientset "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned"
	apinexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/api.nexus.org/v1"
	fakeapinexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/api.nexus.org/v1/fake"
	apigatewaynexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/apigateway.nexus.org/v1"
	fakeapigatewaynexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/apigateway.nexus.org/v1/fake"
	authenticationnexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/authentication.nexus.org/v1"
	fakeauthenticationnexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/authentication.nexus.org/v1/fake"
	confignexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/config.nexus.org/v1"
	fakeconfignexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/config.nexus.org/v1/fake"
	connectnexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/connect.nexus.org/v1"
	fakeconnectnexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/connect.nexus.org/v1/fake"
	routenexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/route.nexus.org/v1"
	fakeroutenexusv1 "golang-appnet.eng.vmware.com/nexus-sdk/api/build/client/clientset/versioned/typed/route.nexus.org/v1/fake"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/watch"
	"k8s.io/client-go/discovery"
	fakediscovery "k8s.io/client-go/discovery/fake"
	"k8s.io/client-go/testing"
)

// NewSimpleClientset returns a clientset that will respond with the provided objects.
// It's backed by a very simple object tracker that processes creates, updates and deletions as-is,
// without applying any validations and/or defaults. It shouldn't be considered a replacement
// for a real clientset and is mostly useful in simple unit tests.
func NewSimpleClientset(objects ...runtime.Object) *Clientset {
	o := testing.NewObjectTracker(scheme, codecs.UniversalDecoder())
	for _, obj := range objects {
		if err := o.Add(obj); err != nil {
			panic(err)
		}
	}

	cs := &Clientset{tracker: o}
	cs.discovery = &fakediscovery.FakeDiscovery{Fake: &cs.Fake}
	cs.AddReactor("*", "*", testing.ObjectReaction(o))
	cs.AddWatchReactor("*", func(action testing.Action) (handled bool, ret watch.Interface, err error) {
		gvr := action.GetResource()
		ns := action.GetNamespace()
		watch, err := o.Watch(gvr, ns)
		if err != nil {
			return false, nil, err
		}
		return true, watch, nil
	})

	return cs
}

// Clientset implements clientset.Interface. Meant to be embedded into a
// struct to get a default implementation. This makes faking out just the method
// you want to test easier.
type Clientset struct {
	testing.Fake
	discovery *fakediscovery.FakeDiscovery
	tracker   testing.ObjectTracker
}

func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	return c.discovery
}

func (c *Clientset) Tracker() testing.ObjectTracker {
	return c.tracker
}

var (
	_ clientset.Interface = &Clientset{}
	_ testing.FakeClient  = &Clientset{}
)

// ApiNexusV1 retrieves the ApiNexusV1Client
func (c *Clientset) ApiNexusV1() apinexusv1.ApiNexusV1Interface {
	return &fakeapinexusv1.FakeApiNexusV1{Fake: &c.Fake}
}

// ApigatewayNexusV1 retrieves the ApigatewayNexusV1Client
func (c *Clientset) ApigatewayNexusV1() apigatewaynexusv1.ApigatewayNexusV1Interface {
	return &fakeapigatewaynexusv1.FakeApigatewayNexusV1{Fake: &c.Fake}
}

// AuthenticationNexusV1 retrieves the AuthenticationNexusV1Client
func (c *Clientset) AuthenticationNexusV1() authenticationnexusv1.AuthenticationNexusV1Interface {
	return &fakeauthenticationnexusv1.FakeAuthenticationNexusV1{Fake: &c.Fake}
}

// ConfigNexusV1 retrieves the ConfigNexusV1Client
func (c *Clientset) ConfigNexusV1() confignexusv1.ConfigNexusV1Interface {
	return &fakeconfignexusv1.FakeConfigNexusV1{Fake: &c.Fake}
}

// ConnectNexusV1 retrieves the ConnectNexusV1Client
func (c *Clientset) ConnectNexusV1() connectnexusv1.ConnectNexusV1Interface {
	return &fakeconnectnexusv1.FakeConnectNexusV1{Fake: &c.Fake}
}

// RouteNexusV1 retrieves the RouteNexusV1Client
func (c *Clientset) RouteNexusV1() routenexusv1.RouteNexusV1Interface {
	return &fakeroutenexusv1.FakeRouteNexusV1{Fake: &c.Fake}
}
