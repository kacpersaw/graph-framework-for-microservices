// +build !ignore_autogenerated

// Copyright 2021 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CLIOptions) DeepCopyInto(out *CLIOptions) {
	*out = *in
	if in.Repositories != nil {
		in, out := &in.Repositories, &out.Repositories
		*out = make([]PluginRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CLIOptions.
func (in *CLIOptions) DeepCopy() *CLIOptions {
	if in == nil {
		return nil
	}
	out := new(CLIOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientOptions) DeepCopyInto(out *ClientOptions) {
	*out = *in
	if in.CLI != nil {
		in, out := &in.CLI, &out.CLI
		*out = new(CLIOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientOptions.
func (in *ClientOptions) DeepCopy() *ClientOptions {
	if in == nil {
		return nil
	}
	out := new(ClientOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.KnownServers != nil {
		in, out := &in.KnownServers, &out.KnownServers
		*out = make([]*Server, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Server)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClientOptions != nil {
		in, out := &in.ClientOptions, &out.ClientOptions
		*out = new(ClientOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Config) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigList) DeepCopyInto(out *ConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Config, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigList.
func (in *ConfigList) DeepCopy() *ConfigList {
	if in == nil {
		return nil
	}
	out := new(ConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPPluginRepository) DeepCopyInto(out *GCPPluginRepository) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPPluginRepository.
func (in *GCPPluginRepository) DeepCopy() *GCPPluginRepository {
	if in == nil {
		return nil
	}
	out := new(GCPPluginRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalServer) DeepCopyInto(out *GlobalServer) {
	*out = *in
	in.Auth.DeepCopyInto(&out.Auth)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalServer.
func (in *GlobalServer) DeepCopy() *GlobalServer {
	if in == nil {
		return nil
	}
	out := new(GlobalServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalServerAuth) DeepCopyInto(out *GlobalServerAuth) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Expiration.DeepCopyInto(&out.Expiration)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalServerAuth.
func (in *GlobalServerAuth) DeepCopy() *GlobalServerAuth {
	if in == nil {
		return nil
	}
	out := new(GlobalServerAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementClusterServer) DeepCopyInto(out *ManagementClusterServer) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementClusterServer.
func (in *ManagementClusterServer) DeepCopy() *ManagementClusterServer {
	if in == nil {
		return nil
	}
	out := new(ManagementClusterServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginRepository) DeepCopyInto(out *PluginRepository) {
	*out = *in
	if in.GCPPluginRepository != nil {
		in, out := &in.GCPPluginRepository, &out.GCPPluginRepository
		*out = new(GCPPluginRepository)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginRepository.
func (in *PluginRepository) DeepCopy() *PluginRepository {
	if in == nil {
		return nil
	}
	out := new(PluginRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	if in.GlobalOpts != nil {
		in, out := &in.GlobalOpts, &out.GlobalOpts
		*out = new(GlobalServer)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagementClusterOpts != nil {
		in, out := &in.ManagementClusterOpts, &out.ManagementClusterOpts
		*out = new(ManagementClusterServer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}
