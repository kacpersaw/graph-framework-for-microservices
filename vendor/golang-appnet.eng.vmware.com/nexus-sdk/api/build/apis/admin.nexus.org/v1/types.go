// Code generated by nexus. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	"golang-appnet.eng.vmware.com/nexus-sdk/api/build/common"
)

// +k8s:openapi-gen=true
type Child struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

// +k8s:openapi-gen=true
type Link struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

/* ------------------- CRDs definitions ------------------- */

// +genclient
// +genclient:noStatus
// +genclient:nonNamespaced
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
type ProxyRule struct {
	metav1.TypeMeta   `json:",inline" yaml:",inline"`
	metav1.ObjectMeta `json:"metadata" yaml:"metadata"`
	Spec              ProxyRuleSpec `json:"spec,omitempty" yaml:"spec,omitempty"`
}

func (c *ProxyRule) CRDName() string {
	return "proxyrules.admin.nexus.org"
}

func (c *ProxyRule) DisplayName() string {
	if c.GetLabels() != nil {
		return c.GetLabels()[common.DISPLAY_NAME_LABEL]
	}
	return ""
}

// +k8s:openapi-gen=true
type ProxyRuleSpec struct {
	MatchCondition MatchCondition `json:"matchCondition"`
	Upstream       Upstream       `json:"upstream"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type ProxyRuleList struct {
	metav1.TypeMeta `json:",inline" yaml:",inline"`
	metav1.ListMeta `json:"metadata" yaml:"metadata"`
	Items           []ProxyRule `json:"items" yaml:"items"`
}

// +k8s:openapi-gen=true
type Upstream struct {
	Scheme string `json:"scheme"`
	Host   string `json:"host"`
	Port   uint32 `json:"port"`
}

// +k8s:openapi-gen=true
type MatchCondition struct {
	Type  MatchType `json:"type"`
	Key   string    `json:"key"`
	Value string    `json:"value"`
}

// MatchType configuration that determines where the admin gateway has to look for a match condition
type MatchType string
