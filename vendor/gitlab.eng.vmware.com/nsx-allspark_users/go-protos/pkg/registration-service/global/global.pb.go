// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/registration-service/global.proto

package global // import "registration-service/global"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// license type for a tenant
type TenantRequest_License int32

const (
	TenantRequest_LICENSE_ADVANCE          TenantRequest_License = 0
	TenantRequest_LICENSE_ENTERPRISE       TenantRequest_License = 1
	TenantRequest_LICENSE_ADVANCE_SCALE    TenantRequest_License = 2
	TenantRequest_LICENSE_ENTERPRISE_SCALE TenantRequest_License = 3
)

var TenantRequest_License_name = map[int32]string{
	0: "LICENSE_ADVANCE",
	1: "LICENSE_ENTERPRISE",
	2: "LICENSE_ADVANCE_SCALE",
	3: "LICENSE_ENTERPRISE_SCALE",
}
var TenantRequest_License_value = map[string]int32{
	"LICENSE_ADVANCE":          0,
	"LICENSE_ENTERPRISE":       1,
	"LICENSE_ADVANCE_SCALE":    2,
	"LICENSE_ENTERPRISE_SCALE": 3,
}

func (x TenantRequest_License) String() string {
	return proto.EnumName(TenantRequest_License_name, int32(x))
}
func (TenantRequest_License) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{0, 0}
}

type TenantRegistrationStatusResponse_State int32

const (
	TenantRegistrationStatusResponse_STATE_UNSPECIFIED    TenantRegistrationStatusResponse_State = 0
	TenantRegistrationStatusResponse_STATE_REGISTRATION   TenantRegistrationStatusResponse_State = 1
	TenantRegistrationStatusResponse_STATE_UNREGISTRATION TenantRegistrationStatusResponse_State = 2
)

var TenantRegistrationStatusResponse_State_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "STATE_REGISTRATION",
	2: "STATE_UNREGISTRATION",
}
var TenantRegistrationStatusResponse_State_value = map[string]int32{
	"STATE_UNSPECIFIED":    0,
	"STATE_REGISTRATION":   1,
	"STATE_UNREGISTRATION": 2,
}

func (x TenantRegistrationStatusResponse_State) String() string {
	return proto.EnumName(TenantRegistrationStatusResponse_State_name, int32(x))
}
func (TenantRegistrationStatusResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{5, 0}
}

type TenantRegistrationStatusResponse_Status int32

const (
	TenantRegistrationStatusResponse_STATUS_UNSPECIFIED TenantRegistrationStatusResponse_Status = 0
	TenantRegistrationStatusResponse_STATUS_IN_PROGRESS TenantRegistrationStatusResponse_Status = 1
	TenantRegistrationStatusResponse_STATUS_COMPLETED   TenantRegistrationStatusResponse_Status = 2
	TenantRegistrationStatusResponse_STATUS_FAILED      TenantRegistrationStatusResponse_Status = 3
)

var TenantRegistrationStatusResponse_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "STATUS_IN_PROGRESS",
	2: "STATUS_COMPLETED",
	3: "STATUS_FAILED",
}
var TenantRegistrationStatusResponse_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"STATUS_IN_PROGRESS": 1,
	"STATUS_COMPLETED":   2,
	"STATUS_FAILED":      3,
}

func (x TenantRegistrationStatusResponse_Status) String() string {
	return proto.EnumName(TenantRegistrationStatusResponse_Status_name, int32(x))
}
func (TenantRegistrationStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{5, 1}
}

// Request object for tenant operations
type TenantRequest struct {
	// `name` is identity/name of a tenant in TSM
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The DNS suffix to use for the global services accessible across clusters.
	// This suffix will be appended to all Global services. For example, a global
	// service with DNS prefix foo.bar will have a FQDN of foo.bar.svc.cluster.global.
	// If not specified, it defaults to svc.cluster.global
	DnsSuffix            string                `protobuf:"bytes,2,opt,name=dns_suffix,json=dnsSuffix,proto3" json:"dns_suffix,omitempty"`
	License              TenantRequest_License `protobuf:"varint,3,opt,name=license,proto3,enum=global.TenantRequest_License" json:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TenantRequest) Reset()         { *m = TenantRequest{} }
func (m *TenantRequest) String() string { return proto.CompactTextString(m) }
func (*TenantRequest) ProtoMessage()    {}
func (*TenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{0}
}
func (m *TenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantRequest.Unmarshal(m, b)
}
func (m *TenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantRequest.Marshal(b, m, deterministic)
}
func (dst *TenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantRequest.Merge(dst, src)
}
func (m *TenantRequest) XXX_Size() int {
	return xxx_messageInfo_TenantRequest.Size(m)
}
func (m *TenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TenantRequest proto.InternalMessageInfo

func (m *TenantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TenantRequest) GetDnsSuffix() string {
	if m != nil {
		return m.DnsSuffix
	}
	return ""
}

func (m *TenantRequest) GetLicense() TenantRequest_License {
	if m != nil {
		return m.License
	}
	return TenantRequest_LICENSE_ADVANCE
}

type TenantResponse struct {
	// Success/failure response message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Response code
	Code int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// YAML file returned to be consumed by the tenant. This YAML will run on the cluster (currently k8s)
	TenantYaml []byte `protobuf:"bytes,5,opt,name=tenant_yaml,json=tenantYaml,proto3" json:"tenant_yaml,omitempty"`
	// External LB of TSM cloud.
	Lb                   string   `protobuf:"bytes,6,opt,name=lb,proto3" json:"lb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantResponse) Reset()         { *m = TenantResponse{} }
func (m *TenantResponse) String() string { return proto.CompactTextString(m) }
func (*TenantResponse) ProtoMessage()    {}
func (*TenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{1}
}
func (m *TenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantResponse.Unmarshal(m, b)
}
func (m *TenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantResponse.Marshal(b, m, deterministic)
}
func (dst *TenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantResponse.Merge(dst, src)
}
func (m *TenantResponse) XXX_Size() int {
	return xxx_messageInfo_TenantResponse.Size(m)
}
func (m *TenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TenantResponse proto.InternalMessageInfo

func (m *TenantResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TenantResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TenantResponse) GetTenantYaml() []byte {
	if m != nil {
		return m.TenantYaml
	}
	return nil
}

func (m *TenantResponse) GetLb() string {
	if m != nil {
		return m.Lb
	}
	return ""
}

type AuthIntegrationRequest struct {
	// Service name
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// CSP access token
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Service definition id
	ServiceId string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Oauth client id
	ClientId string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Service role
	ServiceRole          string   `protobuf:"bytes,5,opt,name=service_role,json=serviceRole,proto3" json:"service_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthIntegrationRequest) Reset()         { *m = AuthIntegrationRequest{} }
func (m *AuthIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*AuthIntegrationRequest) ProtoMessage()    {}
func (*AuthIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{2}
}
func (m *AuthIntegrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthIntegrationRequest.Unmarshal(m, b)
}
func (m *AuthIntegrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthIntegrationRequest.Marshal(b, m, deterministic)
}
func (dst *AuthIntegrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthIntegrationRequest.Merge(dst, src)
}
func (m *AuthIntegrationRequest) XXX_Size() int {
	return xxx_messageInfo_AuthIntegrationRequest.Size(m)
}
func (m *AuthIntegrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthIntegrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthIntegrationRequest proto.InternalMessageInfo

func (m *AuthIntegrationRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AuthIntegrationRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AuthIntegrationRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *AuthIntegrationRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AuthIntegrationRequest) GetServiceRole() string {
	if m != nil {
		return m.ServiceRole
	}
	return ""
}

type AuthIntegrationResponse struct {
	// Success/failure response message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Response code
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthIntegrationResponse) Reset()         { *m = AuthIntegrationResponse{} }
func (m *AuthIntegrationResponse) String() string { return proto.CompactTextString(m) }
func (*AuthIntegrationResponse) ProtoMessage()    {}
func (*AuthIntegrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{3}
}
func (m *AuthIntegrationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthIntegrationResponse.Unmarshal(m, b)
}
func (m *AuthIntegrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthIntegrationResponse.Marshal(b, m, deterministic)
}
func (dst *AuthIntegrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthIntegrationResponse.Merge(dst, src)
}
func (m *AuthIntegrationResponse) XXX_Size() int {
	return xxx_messageInfo_AuthIntegrationResponse.Size(m)
}
func (m *AuthIntegrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthIntegrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthIntegrationResponse proto.InternalMessageInfo

func (m *AuthIntegrationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AuthIntegrationResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

// Request object for GetTenantRegistrationStatus
type TenantRegistrationStatusRequest struct {
	// `name` is identity/name of a tenant in TSM
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantRegistrationStatusRequest) Reset()         { *m = TenantRegistrationStatusRequest{} }
func (m *TenantRegistrationStatusRequest) String() string { return proto.CompactTextString(m) }
func (*TenantRegistrationStatusRequest) ProtoMessage()    {}
func (*TenantRegistrationStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{4}
}
func (m *TenantRegistrationStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantRegistrationStatusRequest.Unmarshal(m, b)
}
func (m *TenantRegistrationStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantRegistrationStatusRequest.Marshal(b, m, deterministic)
}
func (dst *TenantRegistrationStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantRegistrationStatusRequest.Merge(dst, src)
}
func (m *TenantRegistrationStatusRequest) XXX_Size() int {
	return xxx_messageInfo_TenantRegistrationStatusRequest.Size(m)
}
func (m *TenantRegistrationStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantRegistrationStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TenantRegistrationStatusRequest proto.InternalMessageInfo

func (m *TenantRegistrationStatusRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response object for GetTenantRegistrationStatus
type TenantRegistrationStatusResponse struct {
	State  TenantRegistrationStatusResponse_State  `protobuf:"varint,1,opt,name=state,proto3,enum=global.TenantRegistrationStatusResponse_State" json:"state,omitempty"`
	Status TenantRegistrationStatusResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=global.TenantRegistrationStatusResponse_Status" json:"status,omitempty"`
	// Success/failure response message
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantRegistrationStatusResponse) Reset()         { *m = TenantRegistrationStatusResponse{} }
func (m *TenantRegistrationStatusResponse) String() string { return proto.CompactTextString(m) }
func (*TenantRegistrationStatusResponse) ProtoMessage()    {}
func (*TenantRegistrationStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_global_f94c62a4c4eade14, []int{5}
}
func (m *TenantRegistrationStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantRegistrationStatusResponse.Unmarshal(m, b)
}
func (m *TenantRegistrationStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantRegistrationStatusResponse.Marshal(b, m, deterministic)
}
func (dst *TenantRegistrationStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantRegistrationStatusResponse.Merge(dst, src)
}
func (m *TenantRegistrationStatusResponse) XXX_Size() int {
	return xxx_messageInfo_TenantRegistrationStatusResponse.Size(m)
}
func (m *TenantRegistrationStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantRegistrationStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TenantRegistrationStatusResponse proto.InternalMessageInfo

func (m *TenantRegistrationStatusResponse) GetState() TenantRegistrationStatusResponse_State {
	if m != nil {
		return m.State
	}
	return TenantRegistrationStatusResponse_STATE_UNSPECIFIED
}

func (m *TenantRegistrationStatusResponse) GetStatus() TenantRegistrationStatusResponse_Status {
	if m != nil {
		return m.Status
	}
	return TenantRegistrationStatusResponse_STATUS_UNSPECIFIED
}

func (m *TenantRegistrationStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*TenantRequest)(nil), "global.TenantRequest")
	proto.RegisterType((*TenantResponse)(nil), "global.TenantResponse")
	proto.RegisterType((*AuthIntegrationRequest)(nil), "global.AuthIntegrationRequest")
	proto.RegisterType((*AuthIntegrationResponse)(nil), "global.AuthIntegrationResponse")
	proto.RegisterType((*TenantRegistrationStatusRequest)(nil), "global.TenantRegistrationStatusRequest")
	proto.RegisterType((*TenantRegistrationStatusResponse)(nil), "global.TenantRegistrationStatusResponse")
	proto.RegisterEnum("global.TenantRequest_License", TenantRequest_License_name, TenantRequest_License_value)
	proto.RegisterEnum("global.TenantRegistrationStatusResponse_State", TenantRegistrationStatusResponse_State_name, TenantRegistrationStatusResponse_State_value)
	proto.RegisterEnum("global.TenantRegistrationStatusResponse_Status", TenantRegistrationStatusResponse_Status_name, TenantRegistrationStatusResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GlobalRegistrationClient is the client API for GlobalRegistration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GlobalRegistrationClient interface {
	// RegisterTenant registers a new tenant to TSM
	RegisterTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*TenantResponse, error)
	// UnregisterTenant removes a tenant from TSM
	UnregisterTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*TenantResponse, error)
	// Add auth integration for a service
	AddAuthIntegration(ctx context.Context, in *AuthIntegrationRequest, opts ...grpc.CallOption) (*AuthIntegrationResponse, error)
	// Remove auth integration for a service
	RemoveAuthIntegration(ctx context.Context, in *AuthIntegrationRequest, opts ...grpc.CallOption) (*AuthIntegrationResponse, error)
	// GetTenantRegistrationStatus is used to fetch tenant's registration status
	GetTenantRegistrationStatus(ctx context.Context, in *TenantRegistrationStatusRequest, opts ...grpc.CallOption) (*TenantRegistrationStatusResponse, error)
}

type globalRegistrationClient struct {
	cc *grpc.ClientConn
}

func NewGlobalRegistrationClient(cc *grpc.ClientConn) GlobalRegistrationClient {
	return &globalRegistrationClient{cc}
}

func (c *globalRegistrationClient) RegisterTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*TenantResponse, error) {
	out := new(TenantResponse)
	err := c.cc.Invoke(ctx, "/global.GlobalRegistration/RegisterTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalRegistrationClient) UnregisterTenant(ctx context.Context, in *TenantRequest, opts ...grpc.CallOption) (*TenantResponse, error) {
	out := new(TenantResponse)
	err := c.cc.Invoke(ctx, "/global.GlobalRegistration/UnregisterTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalRegistrationClient) AddAuthIntegration(ctx context.Context, in *AuthIntegrationRequest, opts ...grpc.CallOption) (*AuthIntegrationResponse, error) {
	out := new(AuthIntegrationResponse)
	err := c.cc.Invoke(ctx, "/global.GlobalRegistration/AddAuthIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalRegistrationClient) RemoveAuthIntegration(ctx context.Context, in *AuthIntegrationRequest, opts ...grpc.CallOption) (*AuthIntegrationResponse, error) {
	out := new(AuthIntegrationResponse)
	err := c.cc.Invoke(ctx, "/global.GlobalRegistration/RemoveAuthIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalRegistrationClient) GetTenantRegistrationStatus(ctx context.Context, in *TenantRegistrationStatusRequest, opts ...grpc.CallOption) (*TenantRegistrationStatusResponse, error) {
	out := new(TenantRegistrationStatusResponse)
	err := c.cc.Invoke(ctx, "/global.GlobalRegistration/GetTenantRegistrationStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GlobalRegistrationServer is the server API for GlobalRegistration service.
type GlobalRegistrationServer interface {
	// RegisterTenant registers a new tenant to TSM
	RegisterTenant(context.Context, *TenantRequest) (*TenantResponse, error)
	// UnregisterTenant removes a tenant from TSM
	UnregisterTenant(context.Context, *TenantRequest) (*TenantResponse, error)
	// Add auth integration for a service
	AddAuthIntegration(context.Context, *AuthIntegrationRequest) (*AuthIntegrationResponse, error)
	// Remove auth integration for a service
	RemoveAuthIntegration(context.Context, *AuthIntegrationRequest) (*AuthIntegrationResponse, error)
	// GetTenantRegistrationStatus is used to fetch tenant's registration status
	GetTenantRegistrationStatus(context.Context, *TenantRegistrationStatusRequest) (*TenantRegistrationStatusResponse, error)
}

func RegisterGlobalRegistrationServer(s *grpc.Server, srv GlobalRegistrationServer) {
	s.RegisterService(&_GlobalRegistration_serviceDesc, srv)
}

func _GlobalRegistration_RegisterTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalRegistrationServer).RegisterTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/global.GlobalRegistration/RegisterTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalRegistrationServer).RegisterTenant(ctx, req.(*TenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalRegistration_UnregisterTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalRegistrationServer).UnregisterTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/global.GlobalRegistration/UnregisterTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalRegistrationServer).UnregisterTenant(ctx, req.(*TenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalRegistration_AddAuthIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalRegistrationServer).AddAuthIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/global.GlobalRegistration/AddAuthIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalRegistrationServer).AddAuthIntegration(ctx, req.(*AuthIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalRegistration_RemoveAuthIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalRegistrationServer).RemoveAuthIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/global.GlobalRegistration/RemoveAuthIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalRegistrationServer).RemoveAuthIntegration(ctx, req.(*AuthIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalRegistration_GetTenantRegistrationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantRegistrationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalRegistrationServer).GetTenantRegistrationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/global.GlobalRegistration/GetTenantRegistrationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalRegistrationServer).GetTenantRegistrationStatus(ctx, req.(*TenantRegistrationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GlobalRegistration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "global.GlobalRegistration",
	HandlerType: (*GlobalRegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTenant",
			Handler:    _GlobalRegistration_RegisterTenant_Handler,
		},
		{
			MethodName: "UnregisterTenant",
			Handler:    _GlobalRegistration_UnregisterTenant_Handler,
		},
		{
			MethodName: "AddAuthIntegration",
			Handler:    _GlobalRegistration_AddAuthIntegration_Handler,
		},
		{
			MethodName: "RemoveAuthIntegration",
			Handler:    _GlobalRegistration_RemoveAuthIntegration_Handler,
		},
		{
			MethodName: "GetTenantRegistrationStatus",
			Handler:    _GlobalRegistration_GetTenantRegistrationStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/registration-service/global.proto",
}

func init() {
	proto.RegisterFile("protos/registration-service/global.proto", fileDescriptor_global_f94c62a4c4eade14)
}

var fileDescriptor_global_f94c62a4c4eade14 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x93, 0x26, 0x25, 0xd3, 0x36, 0xb8, 0x4b, 0x53, 0x4c, 0x4b, 0x69, 0xea, 0x0b, 0xb9,
	0x90, 0x4a, 0x41, 0x88, 0xb3, 0x49, 0xb6, 0x91, 0xa5, 0xe0, 0x46, 0x6b, 0x07, 0x44, 0x2f, 0x96,
	0x63, 0x6f, 0x83, 0x85, 0x63, 0x17, 0xef, 0xa6, 0x82, 0x1b, 0x7f, 0x8c, 0x23, 0xff, 0x86, 0x1f,
	0x81, 0xbc, 0x6b, 0xd3, 0x34, 0x4d, 0xca, 0x97, 0xb8, 0x79, 0xde, 0xcc, 0xbc, 0x99, 0x7d, 0xfb,
	0xac, 0x85, 0xd6, 0x65, 0x9a, 0xf0, 0x84, 0x9d, 0xa4, 0x74, 0x12, 0x32, 0x9e, 0x7a, 0x3c, 0x4c,
	0xe2, 0x67, 0x8c, 0xa6, 0x57, 0xa1, 0x4f, 0x4f, 0x26, 0x51, 0x32, 0xf6, 0xa2, 0xb6, 0x28, 0x41,
	0x55, 0x19, 0xe9, 0xdf, 0x15, 0xd8, 0x76, 0x68, 0xec, 0xc5, 0x9c, 0xd0, 0x8f, 0x33, 0xca, 0x38,
	0x42, 0xb0, 0x1e, 0x7b, 0x53, 0xaa, 0x29, 0x4d, 0xa5, 0x55, 0x23, 0xe2, 0x1b, 0x1d, 0x02, 0x04,
	0x31, 0x73, 0xd9, 0xec, 0xe2, 0x22, 0xfc, 0xa4, 0x95, 0x44, 0xa6, 0x16, 0xc4, 0xcc, 0x16, 0x00,
	0x7a, 0x09, 0x1b, 0x51, 0xe8, 0xd3, 0x98, 0x51, 0xad, 0xdc, 0x54, 0x5a, 0xf5, 0xce, 0x61, 0x3b,
	0x1f, 0x76, 0x83, 0xba, 0x3d, 0x90, 0x45, 0xa4, 0xa8, 0xd6, 0x13, 0xd8, 0xc8, 0x31, 0xf4, 0x00,
	0xee, 0x0f, 0xcc, 0x2e, 0xb6, 0x6c, 0xec, 0x1a, 0xbd, 0x37, 0x86, 0xd5, 0xc5, 0xea, 0x1a, 0xda,
	0x03, 0x54, 0x80, 0xd8, 0x72, 0x30, 0x19, 0x12, 0xd3, 0xc6, 0xaa, 0x82, 0x1e, 0x41, 0x63, 0xa1,
	0xd8, 0xb5, 0xbb, 0xc6, 0x00, 0xab, 0x25, 0xf4, 0x18, 0xb4, 0xdb, 0x2d, 0x79, 0xb6, 0xac, 0x27,
	0x50, 0x2f, 0x56, 0x62, 0x97, 0x49, 0x36, 0x57, 0x83, 0x8d, 0x29, 0x65, 0xcc, 0x9b, 0x14, 0x27,
	0x2e, 0xc2, 0x4c, 0x08, 0x3f, 0x09, 0xa8, 0x38, 0x6e, 0x85, 0x88, 0x6f, 0x74, 0x04, 0x9b, 0x5c,
	0xf4, 0xbb, 0x9f, 0xbd, 0x69, 0xa4, 0x55, 0x9a, 0x4a, 0x6b, 0x8b, 0x80, 0x84, 0xde, 0x79, 0xd3,
	0x08, 0xd5, 0xa1, 0x14, 0x8d, 0xb5, 0xaa, 0x60, 0x2a, 0x45, 0x63, 0xfd, 0xab, 0x02, 0x7b, 0xc6,
	0x8c, 0xbf, 0x37, 0x63, 0x4e, 0x27, 0xf2, 0x42, 0x0a, 0xa1, 0x8f, 0x61, 0x2b, 0xbf, 0x1a, 0x77,
	0x4e, 0xf0, 0xcd, 0x1c, 0xb3, 0x32, 0xdd, 0x8f, 0x61, 0xcb, 0xf3, 0x7d, 0xca, 0x98, 0xcb, 0x93,
	0x0f, 0x34, 0xce, 0x95, 0xdf, 0x94, 0x98, 0x93, 0x41, 0xd9, 0xd5, 0x14, 0x2c, 0x61, 0x20, 0xe4,
	0xaf, 0x91, 0x5a, 0x8e, 0x98, 0x01, 0x3a, 0x80, 0x9a, 0x1f, 0x85, 0x34, 0xe6, 0x59, 0x76, 0x5d,
	0x64, 0xef, 0x49, 0xc0, 0x0c, 0xe6, 0x37, 0x48, 0x93, 0x88, 0x8a, 0xe3, 0x5c, 0x6f, 0x40, 0x92,
	0x88, 0xea, 0x7d, 0x78, 0x78, 0x6b, 0xfd, 0xbf, 0x51, 0x4e, 0x7f, 0x01, 0x47, 0x85, 0xf2, 0xd7,
	0xde, 0xb4, 0xb9, 0xc7, 0x67, 0xec, 0x0e, 0xe7, 0xe9, 0x5f, 0xca, 0xd0, 0x5c, 0xdd, 0x97, 0x6f,
	0xd2, 0x83, 0x0a, 0xe3, 0x1e, 0x97, 0x9d, 0xf5, 0x4e, 0x7b, 0xd1, 0x7d, 0xab, 0x1a, 0xdb, 0x59,
	0x48, 0x89, 0x6c, 0x46, 0x7d, 0xa8, 0x32, 0x91, 0x16, 0x7b, 0xd7, 0x3b, 0x27, 0x7f, 0x44, 0x33,
	0x63, 0x24, 0x6f, 0x9f, 0x17, 0xa6, 0x7c, 0x43, 0x18, 0x7d, 0x08, 0x15, 0x31, 0x12, 0x35, 0x60,
	0xc7, 0x76, 0x0c, 0x07, 0xbb, 0x23, 0xcb, 0x1e, 0xe2, 0xae, 0x79, 0x6a, 0xe2, 0x9e, 0xf4, 0xbb,
	0x84, 0x09, 0xee, 0x9b, 0xb6, 0x43, 0x0c, 0xc7, 0x3c, 0xb3, 0x54, 0x05, 0x69, 0xb0, 0x5b, 0x94,
	0xdf, 0xc8, 0x94, 0x74, 0x0f, 0xaa, 0x72, 0x7a, 0xd1, 0x3b, 0xb2, 0x97, 0x73, 0x8e, 0x6c, 0xd7,
	0xb4, 0xdc, 0x21, 0x39, 0xeb, 0x13, 0x6c, 0xdb, 0xaa, 0x82, 0x76, 0x41, 0xcd, 0xf1, 0xee, 0xd9,
	0xeb, 0xe1, 0x00, 0x3b, 0xb8, 0xa7, 0x96, 0xd0, 0x0e, 0x6c, 0xe7, 0xe8, 0xa9, 0x61, 0x0e, 0x70,
	0x4f, 0x2d, 0x77, 0xbe, 0x95, 0x01, 0xf5, 0x85, 0x12, 0xf3, 0x12, 0x20, 0x03, 0xea, 0x32, 0xa6,
	0xa9, 0x14, 0x08, 0x35, 0x96, 0xfe, 0xf5, 0xfb, 0x7b, 0x8b, 0xb0, 0x54, 0x4d, 0x5f, 0x43, 0x5d,
	0x50, 0x47, 0x71, 0xfa, 0x8f, 0x24, 0x6f, 0x01, 0x19, 0x41, 0xb0, 0x60, 0x52, 0xf4, 0xa4, 0xa8,
	0x5f, 0xfe, 0xf3, 0xed, 0x1f, 0xad, 0xcc, 0xff, 0x24, 0x3e, 0x87, 0x06, 0xa1, 0xd3, 0xe4, 0x8a,
	0xfe, 0x07, 0xee, 0x14, 0x0e, 0xfa, 0x94, 0xaf, 0x32, 0x16, 0x7a, 0xfa, 0x6b, 0xeb, 0xc9, 0x51,
	0xad, 0xdf, 0xf5, 0xa8, 0xbe, 0xf6, 0xea, 0xf0, 0xfc, 0xe0, 0x8e, 0x77, 0x61, 0x5c, 0x15, 0x0f,
	0xc3, 0xf3, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0x31, 0x67, 0x13, 0x44, 0x06, 0x00, 0x00,
}
