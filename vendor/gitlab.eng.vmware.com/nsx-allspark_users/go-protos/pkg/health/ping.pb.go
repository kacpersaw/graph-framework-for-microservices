// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/health/ping.proto

package health

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingInput struct {
	Sequence             uint64   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingInput) Reset()         { *m = PingInput{} }
func (m *PingInput) String() string { return proto.CompactTextString(m) }
func (*PingInput) ProtoMessage()    {}
func (*PingInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_ping_409a51fc36698763, []int{0}
}
func (m *PingInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingInput.Unmarshal(m, b)
}
func (m *PingInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingInput.Marshal(b, m, deterministic)
}
func (dst *PingInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingInput.Merge(dst, src)
}
func (m *PingInput) XXX_Size() int {
	return xxx_messageInfo_PingInput.Size(m)
}
func (m *PingInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingInput.DiscardUnknown(m)
}

var xxx_messageInfo_PingInput proto.InternalMessageInfo

func (m *PingInput) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *PingInput) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type PingOutput struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Sequence             uint64   `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	SvcName              string   `protobuf:"bytes,4,opt,name=svc_name,json=svcName,proto3" json:"svc_name,omitempty"`
	SvcNamespace         string   `protobuf:"bytes,5,opt,name=svc_namespace,json=svcNamespace,proto3" json:"svc_namespace,omitempty"`
	SvcVersion           string   `protobuf:"bytes,6,opt,name=svc_version,json=svcVersion,proto3" json:"svc_version,omitempty"`
	SvcHeadCommit        string   `protobuf:"bytes,7,opt,name=svc_head_commit,json=svcHeadCommit,proto3" json:"svc_head_commit,omitempty"`
	SvcReleaseVersion    string   `protobuf:"bytes,8,opt,name=svc_release_version,json=svcReleaseVersion,proto3" json:"svc_release_version,omitempty"`
	Uptime               string   `protobuf:"bytes,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	ServiceId            string   `protobuf:"bytes,10,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingOutput) Reset()         { *m = PingOutput{} }
func (m *PingOutput) String() string { return proto.CompactTextString(m) }
func (*PingOutput) ProtoMessage()    {}
func (*PingOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_ping_409a51fc36698763, []int{1}
}
func (m *PingOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingOutput.Unmarshal(m, b)
}
func (m *PingOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingOutput.Marshal(b, m, deterministic)
}
func (dst *PingOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingOutput.Merge(dst, src)
}
func (m *PingOutput) XXX_Size() int {
	return xxx_messageInfo_PingOutput.Size(m)
}
func (m *PingOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingOutput.DiscardUnknown(m)
}

var xxx_messageInfo_PingOutput proto.InternalMessageInfo

func (m *PingOutput) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PingOutput) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *PingOutput) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PingOutput) GetSvcName() string {
	if m != nil {
		return m.SvcName
	}
	return ""
}

func (m *PingOutput) GetSvcNamespace() string {
	if m != nil {
		return m.SvcNamespace
	}
	return ""
}

func (m *PingOutput) GetSvcVersion() string {
	if m != nil {
		return m.SvcVersion
	}
	return ""
}

func (m *PingOutput) GetSvcHeadCommit() string {
	if m != nil {
		return m.SvcHeadCommit
	}
	return ""
}

func (m *PingOutput) GetSvcReleaseVersion() string {
	if m != nil {
		return m.SvcReleaseVersion
	}
	return ""
}

func (m *PingOutput) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *PingOutput) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func init() {
	proto.RegisterType((*PingInput)(nil), "health.PingInput")
	proto.RegisterType((*PingOutput)(nil), "health.PingOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	Echo(ctx context.Context, in *PingInput, opts ...grpc.CallOption) (*PingOutput, error)
}

type pingClient struct {
	cc *grpc.ClientConn
}

func NewPingClient(cc *grpc.ClientConn) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) Echo(ctx context.Context, in *PingInput, opts ...grpc.CallOption) (*PingOutput, error) {
	out := new(PingOutput)
	err := c.cc.Invoke(ctx, "/health.Ping/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	Echo(context.Context, *PingInput) (*PingOutput, error)
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/health.Ping/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).Echo(ctx, req.(*PingInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "health.Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Ping_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/health/ping.proto",
}

func init() { proto.RegisterFile("protos/health/ping.proto", fileDescriptor_ping_409a51fc36698763) }

var fileDescriptor_ping_409a51fc36698763 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x6d, 0x1b, 0xd3, 0x66, 0xb4, 0x68, 0x57, 0x28, 0x6b, 0x41, 0x2c, 0x15, 0xa4, 0xa7,
	0x14, 0xf4, 0x20, 0x9e, 0x45, 0xb0, 0x17, 0x95, 0x1c, 0xbc, 0x96, 0x75, 0x33, 0x24, 0x0b, 0xcd,
	0x87, 0x99, 0x4d, 0x7e, 0xa0, 0xbf, 0x4c, 0x76, 0x92, 0x06, 0x05, 0x6f, 0x3b, 0xcf, 0xfb, 0xcc,
	0x7b, 0xd8, 0x01, 0x59, 0x56, 0x85, 0x2d, 0x68, 0x93, 0xa2, 0xda, 0xdb, 0x74, 0x53, 0x9a, 0x3c,
	0x09, 0x19, 0x09, 0xbf, 0x45, 0xab, 0x47, 0x08, 0xde, 0x4d, 0x9e, 0x6c, 0xf3, 0xb2, 0xb6, 0x62,
	0x01, 0x13, 0xc2, 0xaf, 0x1a, 0x73, 0x8d, 0x72, 0xb0, 0x1c, 0xac, 0xbd, 0xa8, 0x9f, 0xc5, 0x39,
	0x8c, 0x32, 0x4a, 0xe4, 0x70, 0x39, 0x58, 0x07, 0x91, 0x7b, 0xae, 0xbe, 0x87, 0x00, 0x6e, 0xf7,
	0xad, 0xb6, 0x6e, 0x79, 0x0e, 0x3e, 0x59, 0x65, 0x6b, 0xe2, 0xd5, 0x69, 0xd4, 0x4d, 0x7f, 0x4a,
	0x87, 0xff, 0x97, 0x8e, 0xfa, 0x52, 0x71, 0x09, 0x13, 0x6a, 0xf4, 0x2e, 0x57, 0x19, 0x4a, 0x8f,
	0xf1, 0x98, 0x1a, 0xfd, 0xaa, 0x32, 0x14, 0x37, 0x30, 0x3d, 0x44, 0x54, 0x2a, 0x8d, 0xf2, 0x98,
	0xf3, 0xd3, 0x2e, 0x67, 0x26, 0xae, 0xe1, 0xc4, 0x49, 0x0d, 0x56, 0x64, 0x8a, 0x5c, 0xfa, 0xac,
	0x00, 0x35, 0xfa, 0xa3, 0x25, 0xe2, 0x16, 0xce, 0x9c, 0x90, 0xa2, 0x8a, 0x77, 0xba, 0xc8, 0x32,
	0x63, 0xe5, 0x98, 0x25, 0x57, 0xfe, 0x82, 0x2a, 0x7e, 0x62, 0x28, 0x42, 0xb8, 0x70, 0x5e, 0x85,
	0x7b, 0x54, 0x84, 0x7d, 0xe1, 0x84, 0xdd, 0x19, 0x35, 0x3a, 0x6a, 0x93, 0x43, 0xef, 0x1c, 0xfc,
	0xba, 0xb4, 0x26, 0x43, 0x19, 0xb0, 0xd2, 0x4d, 0xe2, 0x0a, 0x80, 0xb0, 0x6a, 0x8c, 0xc6, 0x9d,
	0x89, 0x25, 0x70, 0x16, 0x74, 0x64, 0x1b, 0xdf, 0x3d, 0x80, 0xe7, 0xfe, 0x50, 0x6c, 0xc0, 0x7b,
	0xd6, 0x69, 0x21, 0x66, 0x61, 0x7b, 0x98, 0xb0, 0xbf, 0xca, 0x42, 0xfc, 0x46, 0xed, 0x67, 0xaf,
	0x8e, 0x3e, 0x7d, 0xbe, 0xe3, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde, 0xfa, 0x84, 0x99,
	0xe3, 0x01, 0x00, 0x00,
}
